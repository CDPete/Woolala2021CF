// Jialin Li - CSCE 606 Spring 2022

// Each instance of Conversation holds the list of messages between two users
// the IDs of 2 users, which must be ordered lexicographically
// as well as a "unique ID", which uniquely identify a conversation between two users
// UniqueID is generated by concatenating two user's IDs, reserved for future use
// There should be at most one instance between any 2 users

// Messages: a model defined in models/message.dart
// from, to, content

class Conversation {
  final String User1; // User1 must lexicographically precede User2
  final String User2; // Will enforce this in codes defined in other files
  final String UniqueID;
  List Messages;

  Conversation({
    required this.User1,
    required this.User2,
    required this.UniqueID,
    required this.Messages,
  });

  factory Conversation.fromJSON(Map<String, dynamic> json) {
    return Conversation(
      User1 = json["User1"],
      User2 = json["User2"],
      UniqueID = json["UniqueID"],
      Messages = json["Messages"],
    );
  }

  Map<String, dynamic> toJSON() => {
    "User1" : User1,
    "User2" : User2,
    "UniqueID" : UniqueID,
    "Messages" : Messages,
  };
}
